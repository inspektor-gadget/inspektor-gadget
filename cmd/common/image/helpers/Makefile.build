# This makefile is used by the build command, don't execute it manually

CLANG ?= clang
TINYGO ?= tinygo
LLVM_STRIP ?= llvm-strip
BASECFLAGS = -target bpf -Wall -g -O2
CFLAGS ?=
OUTPUTDIR ?= /tmp
EBPFSOURCE ?= program.bpf.c

ARCHS = amd64 arm64
TARGETS = $(foreach ARCH,$(ARCHS),$(OUTPUTDIR)/$(ARCH).bpf.o)

.PHONY: ebpf
ebpf: $(TARGETS)

$(OUTPUTDIR)/%.bpf.o: $(EBPFSOURCE)
	$(CLANG) $(BASECFLAGS) $(CFLAGS) -D __TARGET_ARCH_$(subst amd64,x86,$*) \
		-c $< -I /usr/include/gadget/$*/ -o $@
	$(LLVM_STRIP) -g $@

.PHONY: wasm
ifeq ($(WASM),)
wasm:
	# No wasm file found. Nothing to do.
else ifeq (go,$(patsubst %.go,go,$(WASM)))
wasm: $(WASM)
	# -buildmode=c-shared to build the wasm as a reactor module. See https://github.com/WebAssembly/WASI/blob/main/legacy/application-abi.md#current-unstable-abi
	cd $(dir $(WASM)) && \
	$(TINYGO) build -o $(OUTPUTDIR)/program.wasm -target=wasip1 --no-debug -buildmode=c-shared $(notdir $(WASM))
else ifeq (wasm,$(patsubst %.wasm,wasm,$(WASM)))
wasm:
	# Wasm file already compiled. Nothing to do.
else
wasm:
	$(error Unsupported wasm file type: $(notdir $(WASM)))
endif

# Get value of -f parameter
ALT_MAKEFILE := $(lastword $(MAKEFILE_LIST))
MAKEFILE_DIR := $(dir $(ALT_MAKEFILE))

.PHONY: btfgen
btfgen: $(foreach ARCH,$(ARCHS),btfgen-$(ARCH))

btfgen-%: $(OUTPUTDIR)/%.bpf.o
	$(MAKE) -f $(MAKEFILE_DIR)/Makefile.build.btfgen BPF_OBJECT=$^ ARCH=$(subst amd64,x86_64,$*) btfs; \
